{"ast":null,"code":"var _jsxFileName = \"/home/local/SUTRIXMEDIA1/vi.ha/my-app/src/components/Authors.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\n\nclass Authors extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getAuthors = async data => {\n      console.log(\"ok\");\n      let url = 'http://127.0.0.1:8000/book/authors/';\n      var token = 'Token ' + localStorage.getItem('token');\n      console.log(token);\n      let options = {\n        method: 'GET',\n        url: url,\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': token\n        },\n        credentials: \"same-origin\"\n      };\n      await axios({ ...options\n      }).then(res => {\n        if (res.data) {\n          console.log(res.data);\n          this.setState({\n            authors: res.data\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n        console.log(\"LOGIN FAIL, PLEASE TRY AGAIN\");\n      });\n    };\n\n    this.createAuthor = async data => {\n      var first_name = 'vi';\n      var last_name = 'hoan';\n      var email = '123@abc';\n      console.log(\"ok\");\n      let url = 'http://127.0.0.1:8000/book/authors/';\n      var token = 'Token ' + localStorage.getItem('token');\n      console.log(token);\n      let options = {\n        method: 'POST',\n        url: url,\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': token\n        },\n        data: {\n          first_name: first_name,\n          last_name: last_name,\n          email: email\n        },\n        credentials: \"same-origin\"\n      };\n      await axios({ ...options\n      }).then(res => {\n        if (res.data) {\n          console.log(res.data);\n          this.setState({\n            authors: res.data\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n        console.log(\"LOGIN FAIL, PLEASE TRY AGAIN\");\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.getAuthors();\n    };\n\n    this.state = {\n      authors: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-striped table-bordered table-sm tinymask \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, this.state.authors.map((author, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, author.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, author.first_name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, author.last_name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, author.email))))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createAuthor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: true,\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, \"Add New Record\")));\n  }\n\n}\n\nexport default Authors;","map":{"version":3,"sources":["/home/local/SUTRIXMEDIA1/vi.ha/my-app/src/components/Authors.js"],"names":["axios","React","Component","Authors","constructor","props","getAuthors","data","console","log","url","token","localStorage","getItem","options","method","headers","credentials","then","res","setState","authors","catch","err","createAuthor","first_name","last_name","email","componentDidMount","state","render","map","author","index","id"],"mappings":"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","sourcesContent":["import axios  from 'axios';\nimport React, {Component} from 'react';\nclass Authors extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            authors: []\n        }\n    }\n    getAuthors =  async (data) => {\n        console.log(\"ok\")\n        let url = 'http://127.0.0.1:8000/book/authors/';\n        var token = 'Token ' + localStorage.getItem('token')\n        console.log(token)\n\n        let options = {\n            method: 'GET',\n            url : url,\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': token\n            },\n            credentials: \"same-origin\",\n        };\n\n        await axios({...options}).then((res)=>{\n            if (res.data) {\n              console.log(res.data);\n              this.setState({authors: res.data});\n            }\n        }).catch((err)=>{\n            console.log(err)\n            console.log(\"LOGIN FAIL, PLEASE TRY AGAIN\")\n        })\n        \n\n    }\n\n    createAuthor =  async (data) => {\n        var first_name = 'vi'\n        var last_name = 'hoan'\n\n        var email = '123@abc'\n        console.log(\"ok\")\n        let url = 'http://127.0.0.1:8000/book/authors/';\n        var token = 'Token ' + localStorage.getItem('token')\n        console.log(token)\n\n        let options = {\n            method: 'POST',\n            url : url,\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': token\n            },\n            data: {\n                first_name: first_name,\n                last_name: last_name,\n                email: email\n            },\n            credentials: \"same-origin\",\n        };\n\n        await axios({...options}).then((res)=>{\n            if (res.data) {\n              console.log(res.data);\n              this.setState({authors: res.data});\n            }\n        }).catch((err)=>{\n            console.log(err)\n            console.log(\"LOGIN FAIL, PLEASE TRY AGAIN\")\n        })\n        \n\n    }\n\n    componentDidMount =() =>{\n        this.getAuthors();\n    }\n    \n    render(){\n        return(\n            <div>\n                <table className=\"table table-striped table-bordered table-sm tinymask \">\n                <thead className=\"thead-dark\">\n                    <tr>\n                    <th>ID</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Email</th>\n                    <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {this.state.authors.map((author, index) => (\n                    <tr>\n                        <td>{author.id}</td>\n                        <td>{author.first_name}</td> \n                        <td>{author.last_name}</td>\n                        <td>{author.email}</td>\n                    </tr>\n                ))}\n                </tbody>\n                </table>\n                <button onClick={this.createAuthor}></button>\n                <center><a href className=\"btn btn-primary\">Add New Record</a></center>\n        </div>\n        );\n    }\n}\n\nexport default Authors;"]},"metadata":{},"sourceType":"module"}